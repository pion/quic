language: go

branches:
  only:
  - master

env:
  global:
    - GO111MODULE=on
    - GOLANGCI_LINT_VERSION=1.18.0

cache:
  directories:
    - $HOME/.cache/go-build
    - $GOPATH/pkg/mod

lint_job: &lint_job
  env: CACHE_NAME=lint
  before_script:
    - |
      curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
        | bash -s - -b $GOPATH/bin v${GOLANGCI_LINT_VERSION}
  install: skip
  script:
    - bash .github/assert-contributors.sh
    - bash .github/lint-disallowed-functions-in-library.sh
    - bash .github/lint-commit-message.sh
    - bash .github/lint-filename.sh
    - golangci-lint run ./...
test_job: &test_job
  env: CACHE_NAME=test
  before_install:
    - go mod download
  install:
    - go build ./...
  script:
    - coverpkgs=$(go list ./... | grep -v examples | paste -s -d ',')
    - |
      go test \
        -coverpkg=${coverpkgs} -coverprofile=cover.out -covermode=atomic \
        -v -race ./...
  after_success:
    - travis_retry bash <(curl -s https://codecov.io/bash)
test_i386_job: &test_i386_job
  env: CACHE_NAME=test386
  language: bash
  services: docker
  script:
    - |
      docker run \
        -u $(id -u):$(id -g) \
        -e "GO111MODULE=on" \
        -e "CGO_ENABLED=0" \
        -v $PWD:/go/src/github.com/pion/webrtc \
        -v $HOME/gopath/pkg/mod:/go/pkg/mod \
        -v $HOME/.cache/go-build:/.cache/go-build \
        -w /go/src/github.com/pion/webrtc \
        -it i386/golang:${GO_VERSION}-alpine \
        /usr/local/go/bin/go test -tags quic -v ./...

jobs:
  include:
    - <<: *lint_job
      name: Lint 1.12
      go: 1.12
    - <<: *lint_job
      name: Lint 1.13
      go: 1.13
    - <<: *test_job
      name: Test 1.12
      go: 1.12
    - <<: *test_job
      name: Test 1.13
      go: 1.13
    - <<: *test_i386_job
      name: Test i386 1.12
      env:
        - GO_VERSION=1.12
    - <<: *test_i386_job
      name: Test i386 1.13
      env:
        - GO_VERSION=1.13

notifications:
  email: false
